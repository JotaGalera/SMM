/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paintbasico;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;

/**
 *
 * @author Jota
 */
public class Lienzo extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void paint(Graphics g){
        super.paint(g);
        g.setColor(color);
        
        if(shape == 1){
            g.fillOval(p.x-2,p.y-2,4,4);   
        }
        else if(shape == 2){
            g.drawLine(p.x, p.y, p2.x, p2.y);
        }
        else if(shape == 3){
            x = Math.min(this.p.x, this.p2.x);
            y = Math.min(this.p.y, this.p2.y);        
            ancho= Math.abs(p2.x-p.x);
            alto= Math.abs(p2.y-p.y);
            if(filled == true){
                g.fillRect(x, y, ancho, alto);
            }
            else{              
                g.drawRect(x, y, ancho, alto);
            }
        }
        else if(shape == 4){
            x = Math.min(this.p.x, this.p2.x);
            y = Math.min(this.p.y, this.p2.y);        
            ancho= Math.abs(p2.x-p.x);
            alto= Math.abs(p2.y-p.y);
            
            if(filled == true)
                g.fillOval(x, y, ancho, alto);
            else
                g.drawOval(x, y, ancho, alto);
                
        }
        
    }
    public void reset(){
        p = new Point(-10,-10);
        p2 = new Point(-10,-10);
        this.repaint();
    }
    public void setFilled(){
        if(filled == true)
            filled = false;
        else
            filled = true;
    }
    public void setShape(int i){         
        this.shape = i;
    }
    public void setColor(Color color){
         this.color = color;
    }
    public Color getColor(){
         return color;
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FormListener formListener = new FormListener();

        addMouseMotionListener(formListener);
        addMouseListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.MouseListener, java.awt.event.MouseMotionListener {
        FormListener() {}
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMousePressed(evt);
            }
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMouseReleased(evt);
            }
        }

        public void mouseDragged(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMouseDragged(evt);
            }
        }

        public void mouseMoved(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        p = p2 = null;
        p = evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged

        p2 = evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        
        p2 = evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
       
        p = evt.getPoint();
        
    }//GEN-LAST:event_formMousePressed

    //Variables
    private boolean filled = false;
    private int shape; // 1 = lapiz , 2 = linea, 3 = ovalo, 4 = rectangulo
    private Color color = Color.black;
    private Point p = new Point(-10,-10);
    private Point p2 = new Point(-10,-10);
    private int ancho,alto,x,y;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
